# -*- coding: utf-8 -*-
"""Small dataset for drug review.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TSl5YimvGjVuEBrw6b0Ths6xjDlNBBhL
"""

# Sentiment Analysis of Drug Reviews
# Requirements: scikit-learn, pandas, matplotlib

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report

# 1. Load dataset
# You can download a small sample dataset of drug reviews from UCI ML Repository or Kaggle.
# For demo, we'll create a small dataset (you can replace this with actual CSV).
data = {
    "review": [
        "This drug worked great and improved my health",
        "I feel much better after taking this medicine",
        "No side effects, very effective treatment",
        "This drug is terrible, I feel worse now",
        "Bad experience, caused headache and nausea",
        "Did not work at all, waste of money",
        "Excellent results, highly recommend this drug",
        "Awful medicine, had severe side effects"
    ],
    "sentiment": [1, 1, 1, 0, 0, 0, 1, 0]  # 1 = Positive, 0 = Negative
}

df = pd.DataFrame(data)
print("Dataset shape:", df.shape)
print(df.head())

# 2. Train-test split
X_train, X_test, y_train, y_test = train_test_split(
    df["review"], df["sentiment"], test_size=0.25, random_state=42, stratify=df["sentiment"]
)

# 3. TF-IDF Vectorizer
tfidf = TfidfVectorizer(stop_words="english", max_features=3000)
X_train_tfidf = tfidf.fit_transform(X_train)
X_test_tfidf = tfidf.transform(X_test)

print("TF-IDF shape:", X_train_tfidf.shape)

# 4. Logistic Regression model
model = LogisticRegression(max_iter=1000)
model.fit(X_train_tfidf, y_train)

# 5. Predictions
y_pred = model.predict(X_test_tfidf)

# 6. Evaluation
acc = accuracy_score(y_test, y_pred)
print("\nAccuracy:", acc)
print("\nClassification Report:\n", classification_report(y_test, y_pred, digits=4))

